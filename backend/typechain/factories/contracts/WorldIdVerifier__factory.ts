/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WorldIdVerifier,
  WorldIdVerifierInterface,
} from "../../contracts/WorldIdVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorldID",
        name: "_worldId",
        type: "address",
      },
      {
        internalType: "string",
        name: "_appId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_actionId",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "DuplicateNullifier",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getVerifiedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "verifiedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyAndExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052600160c0908152503480156200001957600080fd5b5060405162000d0b38038062000d0b83398181016040528101906200003f91906200032d565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000d8620000a9836040516020016200008e919062000414565b604051602081830303815290604052620000e860201b60201c565b82604051602001620000bd9291906200045c565b604051602081830303815290604052620000e860201b60201c565b60a08181525050505050620004ee565b6000600882604051602001620000ff9190620004d5565b6040516020818303038152906040528051906020012060001c901c9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001628262000135565b9050919050565b6000620001768262000155565b9050919050565b620001888162000169565b81146200019457600080fd5b50565b600081519050620001a8816200017d565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200020382620001b8565b810181811067ffffffffffffffff82111715620002255762000224620001c9565b5b80604052505050565b60006200023a62000121565b9050620002488282620001f8565b919050565b600067ffffffffffffffff8211156200026b576200026a620001c9565b5b6200027682620001b8565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b60008484015250505050565b6000620002c6620002c0846200024d565b6200022e565b905082815260208101848484011115620002e557620002e4620001b3565b5b620002f284828562000283565b509392505050565b600082601f830112620003125762000311620001ae565b5b815162000324848260208601620002af565b91505092915050565b6000806000606084860312156200034957620003486200012b565b5b6000620003598682870162000197565b935050602084015167ffffffffffffffff8111156200037d576200037c62000130565b5b6200038b86828701620002fa565b925050604084015167ffffffffffffffff811115620003af57620003ae62000130565b5b620003bd86828701620002fa565b9150509250925092565b600081519050919050565b600081905092915050565b6000620003ea82620003c7565b620003f68185620003d2565b93506200040881856020860162000283565b80840191505092915050565b6000620004228284620003dd565b915081905092915050565b6000819050919050565b6000819050919050565b6200045662000450826200042d565b62000437565b82525050565b60006200046a828562000441565b6020820191506200047c8284620003dd565b91508190509392505050565b600081519050919050565b600081905092915050565b6000620004ab8262000488565b620004b7818562000493565b9350620004c981856020860162000283565b80840191505092915050565b6000620004e382846200049e565b915081905092915050565b60805160a05160c0516107ed6200051e6000396000610247015260006102910152600061020a01526107ed6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638462ff2c1461004657806393d4457a14610076578063e9b70553146100a6575b600080fd5b610060600480360381019061005b919061045b565b6100c2565b60405161006d91906104a3565b60405180910390f35b610090600480360381019061008b919061045b565b610118565b60405161009d91906104a3565b60405180910390f35b6100c060048036038101906100bb919061051b565b610138565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60016020528060005260406000206000915054906101000a900460ff1681565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610606565b60405180910390fd5b60008083815260200190815260200160002060009054906101000a900460ff161561020857816040517f78ffaa260000000000000000000000000000000000000000000000000000000081526004016101ff9190610635565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633bc778e3847f000000000000000000000000000000000000000000000000000000000000000061028e8860405160200161027a9190610698565b6040516020818303038152906040526103c1565b867f0000000000000000000000000000000000000000000000000000000000000000876040518763ffffffff1660e01b81526004016102d2969594939291906106cd565b60006040518083038186803b1580156102ea57600080fd5b505afa1580156102fe573d6000803e3d6000fd5b50505050600160008084815260200190815260200160002060006101000a81548160ff02191690831515021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f7826040516103b39190610635565b60405180910390a150505050565b60006008826040516020016103d691906107a0565b6040516020818303038152906040528051906020012060001c901c9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610428826103fd565b9050919050565b6104388161041d565b811461044357600080fd5b50565b6000813590506104558161042f565b92915050565b600060208284031215610471576104706103f8565b5b600061047f84828501610446565b91505092915050565b60008115159050919050565b61049d81610488565b82525050565b60006020820190506104b86000830184610494565b92915050565b6000819050919050565b6104d1816104be565b81146104dc57600080fd5b50565b6000813590506104ee816104c8565b92915050565b600080fd5b600081905082602060080282011115610515576105146104f4565b5b92915050565b6000806000806101608587031215610536576105356103f8565b5b600061054487828801610446565b9450506020610555878288016104df565b9350506040610566878288016104df565b9250506060610577878288016104f9565b91505092959194509250565b600082825260208201905092915050565b7f53656e64657220616e64207369676e616c206164647265737320646f206e6f7460008201527f206d617463680000000000000000000000000000000000000000000000000000602082015250565b60006105f0602683610583565b91506105fb82610594565b604082019050919050565b6000602082019050818103600083015261061f816105e3565b9050919050565b61062f816104be565b82525050565b600060208201905061064a6000830184610626565b92915050565b60008160601b9050919050565b600061066882610650565b9050919050565b600061067a8261065d565b9050919050565b61069261068d8261041d565b61066f565b82525050565b60006106a48284610681565b60148201915081905092915050565b82818337505050565b6106c961010083836106b3565b5050565b60006101a0820190506106e36000830189610626565b6106f06020830188610626565b6106fd6040830187610626565b61070a6060830186610626565b6107176080830185610626565b61072460a08301846106bc565b979650505050505050565b600081519050919050565b600081905092915050565b60005b83811015610763578082015181840152602081019050610748565b60008484015250505050565b600061077a8261072f565b610784818561073a565b9350610794818560208601610745565b80840191505092915050565b60006107ac828461076f565b91508190509291505056fea2646970667358221220c597c249d579d433618548456cfb9f18bf056f6a8ec1579e3ea58bd281b0093d64736f6c63430008180033";

type WorldIdVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldIdVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldIdVerifier__factory extends ContractFactory {
  constructor(...args: WorldIdVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _worldId: AddressLike,
    _appId: string,
    _actionId: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _worldId,
      _appId,
      _actionId,
      overrides || {}
    );
  }
  override deploy(
    _worldId: AddressLike,
    _appId: string,
    _actionId: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _worldId,
      _appId,
      _actionId,
      overrides || {}
    ) as Promise<
      WorldIdVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WorldIdVerifier__factory {
    return super.connect(runner) as WorldIdVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldIdVerifierInterface {
    return new Interface(_abi) as WorldIdVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorldIdVerifier {
    return new Contract(address, _abi, runner) as unknown as WorldIdVerifier;
  }
}
